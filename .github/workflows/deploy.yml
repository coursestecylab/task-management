name: Deploy NestJS to AWS

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Run build
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image
        env:
          ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}
        run: |
          docker build -t $ECR_REPOSITORY_URI:latest .
          docker push $ECR_REPOSITORY_URI:latest

      - name: Create update-config.json file
        env:
          ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}
          SERVICE_ARN: ${{ secrets.APP_RUNNER_SERVICE_ARN }}
          ACCESS_ROLE_ARN: ${{ secrets.ACCESS_ROLE_ARN }}
        run: |
          echo '{
            "ServiceArn": "'$SERVICE_ARN'",
            "SourceConfiguration": {
              "ImageRepository": {
                "ImageIdentifier": "'$ECR_REPOSITORY_URI':latest",
                "ImageConfiguration": {
                  "Port": "8080"
                },
                "ImageRepositoryType": "ECR"
              },
              "AuthenticationConfiguration": {
                "AccessRoleArn": "'$ACCESS_ROLE_ARN'"
              }
            }
          }' > update-config.json

      - name: Deploy to AWS App Runner
        run: |
          aws apprunner update-service --cli-input-json file://update-config.json --region ${{ secrets.AWS_REGION }}
